general:
  # Commands to run when the WM has started. This is useful for running a
  # script or launching another application.
  # Example: The below command launches Zebar.
  startup_commands: ['shell-exec zebar']
  # Commands to run just before the WM is shutdown.
  # Example: The below command kills Zebar.
  shutdown_commands: ['shell-exec taskkill /IM zebar.exe /F']
  # Commands to run after the WM config is reloaded.
  config_reload_commands: []
  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false
  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: true
  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true
    # Trigger for cursor jump:
    # - 'monitor_focus': Jump when focus changes between monitors.
    # - 'window_focus': Jump when focus changes between windows.
    trigger: 'monitor_focus'
gaps:
  # Gap between adjacent windows.
  inner_gap: '20px'
  # Gap between windows and the screen edge.
  outer_gap:
    top: '53px'
    right: '15px'
    bottom: '15px'
    left: '15px'
window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: '#00FFFF'
  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: true
      color: '#a1a1a1'
window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: 'tiling', 'floating'.
  initial_state: 'tiling'
  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true
      # Whether to show floating windows as always on top.
      shown_on_top: false
    fullscreen:
      # Maximize the window if possible. If the window doesn't have a
      # maximize button, then it'll be fullscreen'ed normally instead.
      maximized: true
      # Whether to show fullscreen windows as always on top.
      shown_on_top: false
workspaces:
  - name: "1"
    # Optional override for the workspace label in the bar. Does not need to be unique.
    display_name: "1:  Terminal"
    # Optionally prevent workspace from being deactivated when empty.
    bind_to_monitor: 0
    keep_alive: true
  - name: "2"
    display_name: "2:  Browser"
    bind_to_monitor: 1
    # Optionally prevent workspace from being deactivated when empty.
    keep_alive: true
  - name: "3"
    display_name: "3:  Music"
    bind_to_monitor: 0
    # Optionally prevent workspace from being deactivated when empty.
    keep_alive: true
  - name: "4"
    display_name: "4:  Discord"
    bind_to_monitor: 0
    # Optionally prevent workspace from being deactivated when empty.
    keep_alive: true
  - name: "5"
    display_name: "5:  Gaming"
    bind_to_monitor: 0
    # Optionally prevent workspace from being deactivated when empty.
    keep_alive: true
  - name: "6"
    display_name: "6:  Work"
    bind_to_monitor: 1
    # Optionally prevent workspace from being deactivated when empty.
    keep_alive: true
  - name: "7"
    display_name: "7:  Work"
    bind_to_monitor: 1
  - name: "8"
    display_name: "8:  Work"
    bind_to_monitor: 0
  - name: "9"
    display_name: "9:  Work"
    bind_to_monitor: 0
window_rules:
  - commands: ['ignore']
    match:
      # Ignores any Zebar windows.
      - window_process: { equals: 'zebar' }
      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: '[Pp]icture.in.[Pp]icture' }
        window_class: { regex: 'Chrome_WidgetWin_1|MozillaDialogClass' }
      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: 'PowerToys' }
        window_class: { regex: 'HwndWrapper\[PowerToys\.PowerAccent.*?\]' }
      - window_process: { equals: 'Lively' }
        window_class: { regex: 'HwndWrapper*' }
      - window_process: { regex: 'Taskmgr'}
# move to workspaces
  - commands: ['move --workspace 2']
    match:
      - window_process: { regex: 'msedge|brave|chrome' }
  - commands: ['move --workspace 1']
    match:
      - window_process: { regex: 'pycharm64|Code' }
  - commands: ['move --workspace 3']
    match:
      - window_process: { regex: 'explorer|Files' }
  - commands: ['move --workspace 1']
    match:
      - window_process: { regex: 'sublime_text|WINWORD|EXCEL|Obsidian|WebViewHost' }
  - commands: ['move --workspace 4']
    match:
      - window_process: { regex: 'Messenger|messenger|Discord|olk|msedgewebview2|ms-teams' }
  - commands: ['move --workspace 5']
    match:
      - window_process: { regex: 'steam|Steam|steamwebhelper|steamservice|Epic|epic|Cyberpunk2077|DSX|HellbladeGame-Win64-Shipping|SelfService|CDViewer|REDLauncher' }
 
binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: 'resize'
    keybindings:
      - commands: ['resize --width -2%']
        bindings: ['h', 'left']
      - commands: ['resize --width +2%']
        bindings: ['l', 'right']
      - commands: ['resize --height +2%']
        bindings: ['k', 'up']
      - commands: ['resize --height -2%']
        bindings: ['j', 'down']
      # Press enter/escape to return to default keybindings.
      - commands: ['wm-disable-binding-mode --name resize']
        bindings: ['escape', 'enter']
  # When enabled, all keybindings are disabled except for alt+shift+p which
  # returns to default keybindings.
  - name: 'pause'
    keybindings:
      - commands: ['wm-disable-binding-mode --name pause']
        bindings: ['alt+shift+p']
keybindings:
  # Shift focus in a given direction.
  - commands: ['focus --direction left']
    bindings: ['Alt+Left']
  - commands: ['focus --direction right']
    bindings: ['Alt+Right']
  - commands: ['focus --direction up']
    bindings: ['Alt+Up']
  - commands: ['focus --direction down']
    bindings: ['Alt+Down']
  # Move focused window in a given direction.
  - commands: ['move --direction left']
    bindings: ['alt+shift+h', 'alt+shift+left']
  - commands: ['move --direction right']
    bindings: ['alt+shift+l', 'alt+shift+right']
  - commands: ['move --direction up']
    bindings: ['alt+shift+k', 'alt+shift+up']
  - commands: ['move --direction down']
    bindings: ['alt+shift+j', 'alt+shift+down']
  # # Resize focused window by a percentage or pixel amount.
  # - commands: ['resize --width -2%']
  #   bindings: ['alt+u']
  # - commands: ['resize --width +2%']
  #   bindings: ['alt+p']
  # - commands: ['resize --height +2%']
  #   bindings: ['alt+o']
  # - commands: ['resize --height -2%']
  #   bindings: ['alt+i']
  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name 'resize'.
  # - commands: ['wm-enable-binding-mode --name resize']
  #   bindings: ['alt+r']
  # Disables all keybindings until alt+shift+p is pressed again.
  # - commands: ['wm-enable-binding-mode --name pause']
  #   bindings: ['alt+shift+p']
  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ['toggle-tiling-direction']
    bindings: ['alt+v']
  # Change focus from tiling windows -> floating -> fullscreen.
  # - commands: ['wm-cycle-focus']
  #   bindings: ['alt+space']
  # Change the focused window to be floating.
  # - commands: ['toggle-floating --centered']
  #   bindings: ['alt+shift+space']
  # Change the focused window to be tiling.
  - commands: ['toggle-tiling']
    bindings: ['alt+ctrl+t']
  # Change the focused window to be fullscreen.
  - commands: ['toggle-fullscreen']
    bindings: ['alt+f']
  # Minimize focused window.
  - commands: ['toggle-minimized']
    bindings: ['alt+m']
  # Close focused window.
  - commands: ['close']
    bindings: ['alt+shift+q']
  # Kill GlazeWM process safely.
  - commands: ['wm-exit']
    bindings: ['alt+shift+e']
  # Re-evaluate configuration file.
  - commands: ['wm-reload-config']
    bindings: ['alt+shift+r']
  # Redraw all windows.
  - commands: ['wm-redraw']
    bindings: ['alt+shift+w']
  # Launch CMD terminal. Alternatively, use `shell-exec wt` or
  # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
  # Terminal and Git Bash respectively.
  #- commands: ['shell-exec wt']
  - commands: ["shell-exec alacritty.exe"]
    bindings: ['alt+enter']
  # Focus the next/previous workspace defined in `workspaces` config.
  # - commands: ['focus --next-workspace']
  #   bindings: ['alt+s']
  # - commands: ['focus --prev-workspace']
  #   bindings: ['alt+a']
  # Focus the workspace that last had focus.
  # - commands: ['focus --recent-workspace']
  #   bindings: ['alt+d']
  # Change focus to a workspace defined in `workspaces` config.
  - commands: ['focus --workspace 1']
    bindings: ['alt+1']
  - commands: ['focus --workspace 2']
    bindings: ['alt+2']
  - commands: ['focus --workspace 3']
    bindings: ['alt+3']
  - commands: ['focus --workspace 4']
    bindings: ['alt+4']
  - commands: ['focus --workspace 5']
    bindings: ['alt+5']
  - commands: ['focus --workspace 6']
    bindings: ['alt+6']
  - commands: ['focus --workspace 7']
    bindings: ['alt+7']
  - commands: ['focus --workspace 8']
    bindings: ['alt+8']
  - commands: ['focus --workspace 9']
    bindings: ['alt+9']
  # Move the focused window's parent workspace to a monitor in a given
  # direction.
  - commands: ['move-workspace --direction left']
    bindings: ['Alt+Shift+Ctrl+Left']
  - commands: ['move-workspace --direction right']
    bindings: ['Alt+Shift+Ctrl+Right']
  - commands: ['move-workspace --direction up']
    bindings: ['Alt+Shift+Ctrl+Up']
  - commands: ['move-workspace --direction down']
    bindings: ['Alt+Shift+Ctrl+Down']
  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ['move --workspace 1']
    bindings: ['alt+shift+1']
  - commands: ['move --workspace 2']
    bindings: ['alt+shift+2']
  - commands: ['move --workspace 3']
    bindings: ['alt+shift+3']
  - commands: ['move --workspace 4']
    bindings: ['alt+shift+4']
  - commands: ['move --workspace 5']
    bindings: ['alt+shift+5']
  - commands: ['move --workspace 6']
    bindings: ['alt+shift+6']
  - commands: ['move --workspace 7']
    bindings: ['alt+shift+7']
  - commands: ['move --workspace 8']
    bindings: ['alt+shift+8']
  - commands: ['move --workspace 9']
    bindings: ['alt+shift+9']